from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# add parameters into parameter generator

base = gen.add_group("base")

gen.add("takeoff", bool_t, 0, "takeoff", False)
gen.add("QUIT", bool_t, 0, "QUIT", False)
gen.add("ATTITUDE_MODE", bool_t, 0, "ATTITUDE_MODE", False)
measure = gen.enum([gen.const("nofly", int_t, 0, "nofly"),
                    gen.const("position", int_t, 1, "position"),
                    gen.const("attitude", int_t, 2, "attitude"),
                    gen.const("velocity", int_t, 3, "velocity"),
                    gen.const("land", int_t, 4, "land")], "choice")
base.add("mode", int_t, 4, "mode", 0, 0, 4, edit_method=measure)

safe_area = gen.add_group("safe_area")
# gen.add(name , type, level, description, default, min, max)
safe_area.add("safe_x_min", double_t, 0, "safe_x_min", -1, -1, 1)
safe_area.add("safe_x_max", double_t, 0, "safe_x_max", 1, -1, 1)
safe_area.add("safe_y_min", double_t, 0, "safe_y_min", -0.5, -0.5, 0.5)
safe_area.add("safe_y_max", double_t, 0, "safe_y_max", 0.5, -0.5, 0.5)
safe_area.add("safe_z_min", double_t, 0, "safe_z_min", 0, -0.2, 1.5)
safe_area.add("safe_z_max", double_t, 0, "safe_z_max", 1.3, -0.2, 1.3)

position = gen.add_group("position")
position.add("position_x", double_t, 0, "position_x", 0, -1, 1)
position.add("position_y", double_t, 0, "position_y", 0, -0.5, 0.5)
position.add("position_z", double_t, 0, "position_z", 0, 0, 1.5)

velocity = gen.add_group("velocity")
velocity.add("velocity_x", double_t, 0, "velocity_x", 0, -0.5, 0.5)
velocity.add("velocity_y", double_t, 0, "velocity_y", 0, -0.5, 0.5)
velocity.add("velocity_z", double_t, 0, "velocity_z", 0, -0.5, 0.5)

attitude = gen.add_group("attitude")
attitude.add("roll", double_t, 0, "roll", 0, -20, 20)  #
attitude.add("pitch", double_t, 0, "pitch", 0, -20, 20)
attitude.add("yaw", double_t, 0, "yaw", 0, -180, 180)
attitude.add("yaw_rate", double_t, 0, "yaw_rate", 0, -90, 90)
attitude.add("thrust", double_t, 0, "thrust", 0, 0, 1)

# generate intermediate file
exit(gen.generate("uav_control", "uav_control", "uav"))
